0it [00:00, ?it/s]2it [00:00, 12.93it/s]4it [00:00, 11.78it/s]6it [00:00, 10.42it/s]8it [00:00,  9.23it/s]10it [00:00, 10.06it/s]12it [00:01,  8.11it/s]13it [00:01,  7.19it/s]14it [00:01,  6.40it/s]15it [00:01,  5.73it/s]16it [00:02,  5.14it/s]17it [00:02,  4.70it/s]18it [00:02,  4.35it/s]19it [00:03,  4.04it/s]20it [00:03,  3.82it/s]21it [00:03,  3.62it/s]22it [00:03,  3.41it/s]23it [00:04,  3.23it/s]24it [00:04,  3.01it/s]27it [00:05,  4.24it/s]28it [00:05,  3.69it/s]29it [00:06,  3.29it/s]30it [00:06,  2.97it/s]31it [00:06,  2.68it/s]32it [00:07,  2.46it/s]34it [00:07,  3.97it/s]35it [00:07,  4.59it/s]36it [00:07,  4.81it/s]37it [00:08,  3.41it/s]38it [00:08,  2.79it/s]39it [00:09,  2.44it/s]40it [00:09,  2.23it/s]41it [00:10,  2.07it/s]42it [00:11,  1.97it/s]43it [00:11,  1.88it/s]45it [00:11,  3.19it/s]48it [00:11,  5.41it/s]50it [00:12,  4.26it/s]52it [00:12,  5.16it/s]53it [00:12,  5.50it/s]54it [00:13,  5.76it/s]55it [00:13,  5.86it/s]56it [00:13,  5.76it/s]57it [00:13,  5.54it/s]58it [00:14,  3.38it/s]59it [00:14,  2.59it/s]60it [00:15,  2.19it/s]61it [00:16,  1.93it/s]62it [00:16,  2.52it/s]63it [00:16,  3.15it/s]64it [00:16,  3.45it/s]65it [00:16,  3.61it/s]66it [00:17,  4.02it/s]67it [00:17,  2.63it/s]68it [00:18,  2.11it/s]69it [00:19,  1.84it/s]70it [00:19,  1.67it/s]71it [00:20,  1.53it/s]72it [00:21,  1.42it/s]73it [00:22,  1.37it/s]74it [00:23,  1.33it/s]75it [00:23,  1.29it/s]76it [00:24,  1.64it/s]77it [00:24,  2.02it/s]78it [00:24,  2.38it/s]79it [00:25,  1.83it/s]80it [00:26,  1.55it/s]81it [00:27,  1.39it/s]82it [00:28,  1.27it/s]83it [00:29,  1.20it/s]84it [00:30,  1.14it/s]85it [00:31,  1.11it/s]86it [00:31,  1.41it/s]87it [00:31,  1.73it/s]88it [00:31,  2.05it/s]89it [00:32,  1.57it/s]90it [00:33,  1.95it/s]91it [00:33,  2.38it/s]92it [00:34,  1.68it/s]93it [00:35,  1.39it/s]94it [00:36,  1.23it/s]95it [00:37,  1.13it/s]95it [00:37,  2.54it/s]
0it [00:00, ?it/s]1it [00:31, 31.76s/it]2it [00:47, 22.25s/it]3it [01:01, 18.69s/it]4it [01:07, 13.42s/it]5it [01:08,  9.07s/it]6it [01:08,  6.15s/it]7it [01:09,  4.31s/it]8it [01:10,  3.32s/it]10it [01:11,  1.98s/it]11it [01:12,  1.73s/it]12it [01:13,  1.56s/it]13it [01:15,  1.53s/it]14it [01:16,  1.50s/it]15it [01:18,  1.47s/it]16it [01:19,  1.42s/it]17it [01:19,  1.16s/it]18it [01:20,  1.09s/it]19it [01:21,  1.06s/it]20it [01:22,  1.02s/it]21it [01:33,  4.06s/it]22it [01:54,  8.85s/it]23it [02:04,  9.45s/it]24it [02:09,  7.87s/it]27it [02:09,  3.53s/it]28it [02:13,  3.66s/it]29it [02:16,  3.41s/it]30it [02:17,  2.99s/it]31it [02:20,  2.76s/it]32it [02:22,  2.77s/it]37it [02:24,  1.10s/it]38it [02:25,  1.13s/it]39it [02:27,  1.24s/it]40it [02:29,  1.42s/it]41it [02:31,  1.63s/it]42it [02:33,  1.69s/it]43it [02:35,  1.67s/it]50it [02:45,  1.51s/it]58it [02:51,  1.09s/it]59it [02:59,  1.76s/it]60it [03:13,  3.06s/it]61it [03:28,  4.73s/it]67it [03:44,  3.65s/it]68it [03:47,  3.57s/it]69it [03:51,  3.57s/it]70it [04:05,  5.43s/it]71it [04:18,  6.86s/it]72it [04:22,  6.13s/it]73it [04:25,  5.44s/it]74it [04:38,  7.30s/it]75it [04:50,  8.57s/it]79it [04:58,  4.63s/it]80it [05:02,  4.57s/it]81it [05:07,  4.59s/it]82it [05:12,  4.68s/it]83it [05:14,  4.06s/it]84it [05:16,  3.51s/it]85it [05:18,  3.13s/it]89it [05:20,  1.58s/it]92it [05:22,  1.16s/it]93it [05:25,  1.40s/it]94it [05:27,  1.59s/it]95it [05:29,  1.70s/it]95it [05:29,  3.47s/it]
0it [00:00, ?it/s]45it [00:03, 14.29it/s]47it [00:08,  4.37it/s]48it [00:10,  3.25it/s]49it [00:12,  2.44it/s]51it [00:14,  2.05it/s]52it [00:17,  1.55it/s]53it [00:19,  1.14it/s]54it [00:21,  1.03s/it]55it [00:25,  1.47s/it]56it [00:31,  2.32s/it]57it [00:35,  2.67s/it]76it [00:37,  2.00it/s]77it [00:40,  1.65it/s]78it [00:42,  1.34it/s]86it [00:43,  2.09it/s]87it [00:45,  1.85it/s]88it [00:47,  1.40it/s]95it [00:47,  2.00it/s]
0it [00:00, ?it/s]9it [00:04,  1.85it/s]25it [00:08,  3.10it/s]26it [00:11,  2.09it/s]33it [00:16,  1.80it/s]34it [00:21,  1.16it/s]35it [00:29,  1.52s/it]36it [00:38,  2.37s/it]44it [00:43,  1.42s/it]62it [00:47,  1.56it/s]63it [00:50,  1.29it/s]64it [00:53,  1.14it/s]65it [00:55,  1.03s/it]66it [00:58,  1.17s/it]90it [00:59,  3.46it/s]91it [01:00,  3.06it/s]95it [01:00,  1.57it/s]
Using cache found in /dartfs-hpc/rc/home/9/f003xr9/.cache/torch/hub/pytorch_vision_main
/dartfs/rc/nosnapshots/V/VaickusL-nb/EDIT_Students/users/Gokul_Srinivasan/anaconda3/envs/jupyter-ultimate/lib/python3.7/site-packages/torchvision/models/_utils.py:209: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  f"The parameter '{pretrained_param}' is deprecated since 0.13 and may be removed in the future, "
/dartfs/rc/nosnapshots/V/VaickusL-nb/EDIT_Students/users/Gokul_Srinivasan/anaconda3/envs/jupyter-ultimate/lib/python3.7/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ViT_B_32_Weights.IMAGENET1K_V1`. You can also use `weights=ViT_B_32_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
1105284
28799
21480
Layer: 0
Conv2d(3, 768, kernel_size=(32, 32), stride=(32, 32))
Layer: 1
Encoder(
  (dropout): Dropout(p=0.0, inplace=False)
  (layers): Sequential(
    (encoder_layer_0): EncoderBlock(
      (ln_1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
      (self_attention): MultiheadAttention(
        (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
      )
      (dropout): Dropout(p=0.0, inplace=False)
      (ln_2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
      (mlp): MLPBlock(
        (0): Linear(in_features=768, out_features=3072, bias=True)
        (1): GELU(approximate='none')
        (2): Dropout(p=0.0, inplace=False)
        (3): Linear(in_features=3072, out_features=768, bias=True)
        (4): Dropout(p=0.0, inplace=False)
      )
    )
    (encoder_layer_1): EncoderBlock(
      (ln_1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
      (self_attention): MultiheadAttention(
        (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
      )
      (dropout): Dropout(p=0.0, inplace=False)
      (ln_2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
      (mlp): MLPBlock(
        (0): Linear(in_features=768, out_features=3072, bias=True)
        (1): GELU(approximate='none')
        (2): Dropout(p=0.0, inplace=False)
        (3): Linear(in_features=3072, out_features=768, bias=True)
        (4): Dropout(p=0.0, inplace=False)
      )
    )
    (encoder_layer_2): EncoderBlock(
      (ln_1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
      (self_attention): MultiheadAttention(
        (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
      )
      (dropout): Dropout(p=0.0, inplace=False)
      (ln_2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
      (mlp): MLPBlock(
        (0): Linear(in_features=768, out_features=3072, bias=True)
        (1): GELU(approximate='none')
        (2): Dropout(p=0.0, inplace=False)
        (3): Linear(in_features=3072, out_features=768, bias=True)
        (4): Dropout(p=0.0, inplace=False)
      )
    )
    (encoder_layer_3): EncoderBlock(
      (ln_1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
      (self_attention): MultiheadAttention(
        (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
      )
      (dropout): Dropout(p=0.0, inplace=False)
      (ln_2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
      (mlp): MLPBlock(
        (0): Linear(in_features=768, out_features=3072, bias=True)
        (1): GELU(approximate='none')
        (2): Dropout(p=0.0, inplace=False)
        (3): Linear(in_features=3072, out_features=768, bias=True)
        (4): Dropout(p=0.0, inplace=False)
      )
    )
    (encoder_layer_4): EncoderBlock(
      (ln_1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
      (self_attention): MultiheadAttention(
        (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
      )
      (dropout): Dropout(p=0.0, inplace=False)
      (ln_2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
      (mlp): MLPBlock(
        (0): Linear(in_features=768, out_features=3072, bias=True)
        (1): GELU(approximate='none')
        (2): Dropout(p=0.0, inplace=False)
        (3): Linear(in_features=3072, out_features=768, bias=True)
        (4): Dropout(p=0.0, inplace=False)
      )
    )
    (encoder_layer_5): EncoderBlock(
      (ln_1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
      (self_attention): MultiheadAttention(
        (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
      )
      (dropout): Dropout(p=0.0, inplace=False)
      (ln_2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
      (mlp): MLPBlock(
        (0): Linear(in_features=768, out_features=3072, bias=True)
        (1): GELU(approximate='none')
        (2): Dropout(p=0.0, inplace=False)
        (3): Linear(in_features=3072, out_features=768, bias=True)
        (4): Dropout(p=0.0, inplace=False)
      )
    )
    (encoder_layer_6): EncoderBlock(
      (ln_1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
      (self_attention): MultiheadAttention(
        (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
      )
      (dropout): Dropout(p=0.0, inplace=False)
      (ln_2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
      (mlp): MLPBlock(
        (0): Linear(in_features=768, out_features=3072, bias=True)
        (1): GELU(approximate='none')
        (2): Dropout(p=0.0, inplace=False)
        (3): Linear(in_features=3072, out_features=768, bias=True)
        (4): Dropout(p=0.0, inplace=False)
      )
    )
    (encoder_layer_7): EncoderBlock(
      (ln_1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
      (self_attention): MultiheadAttention(
        (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
      )
      (dropout): Dropout(p=0.0, inplace=False)
      (ln_2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
      (mlp): MLPBlock(
        (0): Linear(in_features=768, out_features=3072, bias=True)
        (1): GELU(approximate='none')
        (2): Dropout(p=0.0, inplace=False)
        (3): Linear(in_features=3072, out_features=768, bias=True)
        (4): Dropout(p=0.0, inplace=False)
      )
    )
    (encoder_layer_8): EncoderBlock(
      (ln_1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
      (self_attention): MultiheadAttention(
        (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
      )
      (dropout): Dropout(p=0.0, inplace=False)
      (ln_2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
      (mlp): MLPBlock(
        (0): Linear(in_features=768, out_features=3072, bias=True)
        (1): GELU(approximate='none')
        (2): Dropout(p=0.0, inplace=False)
        (3): Linear(in_features=3072, out_features=768, bias=True)
        (4): Dropout(p=0.0, inplace=False)
      )
    )
    (encoder_layer_9): EncoderBlock(
      (ln_1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
      (self_attention): MultiheadAttention(
        (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
      )
      (dropout): Dropout(p=0.0, inplace=False)
      (ln_2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
      (mlp): MLPBlock(
        (0): Linear(in_features=768, out_features=3072, bias=True)
        (1): GELU(approximate='none')
        (2): Dropout(p=0.0, inplace=False)
        (3): Linear(in_features=3072, out_features=768, bias=True)
        (4): Dropout(p=0.0, inplace=False)
      )
    )
    (encoder_layer_10): EncoderBlock(
      (ln_1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
      (self_attention): MultiheadAttention(
        (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
      )
      (dropout): Dropout(p=0.0, inplace=False)
      (ln_2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
      (mlp): MLPBlock(
        (0): Linear(in_features=768, out_features=3072, bias=True)
        (1): GELU(approximate='none')
        (2): Dropout(p=0.0, inplace=False)
        (3): Linear(in_features=3072, out_features=768, bias=True)
        (4): Dropout(p=0.0, inplace=False)
      )
    )
    (encoder_layer_11): EncoderBlock(
      (ln_1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
      (self_attention): MultiheadAttention(
        (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
      )
      (dropout): Dropout(p=0.0, inplace=False)
      (ln_2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
      (mlp): MLPBlock(
        (0): Linear(in_features=768, out_features=3072, bias=True)
        (1): GELU(approximate='none')
        (2): Dropout(p=0.0, inplace=False)
        (3): Linear(in_features=3072, out_features=768, bias=True)
        (4): Dropout(p=0.0, inplace=False)
      )
    )
  )
  (ln): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
)
Layer: 2
Sequential(
  (head): Linear(in_features=768, out_features=1000, bias=True)
)
Traceback (most recent call last):
  File "/dartfs/rc/nosnapshots/V/VaickusL-nb/EDIT_Students/users/Gokul_Srinivasan/SCC-Tumor-Detection/Gokul_files/CNN_Tumor_Classification/Executables/ViT.py", line 386, in <module>
    model.to(device)
  File "/dartfs/rc/nosnapshots/V/VaickusL-nb/EDIT_Students/users/Gokul_Srinivasan/anaconda3/envs/jupyter-ultimate/lib/python3.7/site-packages/torch/nn/modules/module.py", line 989, in to
    return self._apply(convert)
  File "/dartfs/rc/nosnapshots/V/VaickusL-nb/EDIT_Students/users/Gokul_Srinivasan/anaconda3/envs/jupyter-ultimate/lib/python3.7/site-packages/torch/nn/modules/module.py", line 641, in _apply
    module._apply(fn)
  File "/dartfs/rc/nosnapshots/V/VaickusL-nb/EDIT_Students/users/Gokul_Srinivasan/anaconda3/envs/jupyter-ultimate/lib/python3.7/site-packages/torch/nn/modules/module.py", line 664, in _apply
    param_applied = fn(param)
  File "/dartfs/rc/nosnapshots/V/VaickusL-nb/EDIT_Students/users/Gokul_Srinivasan/anaconda3/envs/jupyter-ultimate/lib/python3.7/site-packages/torch/nn/modules/module.py", line 987, in convert
    return t.to(device, dtype if t.is_floating_point() or t.is_complex() else None, non_blocking)
RuntimeError: CUDA error: invalid device ordinal
CUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
